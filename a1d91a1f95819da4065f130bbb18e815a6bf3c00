{
  "comments": [
    {
      "key": {
        "uuid": "da5c1566_e2a9dc7c",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 2091
      },
      "writtenOn": "2018-06-06T06:56:53Z",
      "side": 1,
      "message": "Why do you need this?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 32
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_8d7c9174",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 6745
      },
      "writtenOn": "2018-06-06T13:40:56Z",
      "side": 1,
      "message": "Yes I think you can remove this I think it will inherit automatically the super (my bad !!)",
      "parentUuid": "da5c1566_e2a9dc7c",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 32
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_edeeedb3",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 7167
      },
      "writtenOn": "2018-06-06T15:25:38Z",
      "side": 1,
      "message": "I tested it and the correct one is :\nsuper(testcase.TestCase).__init__\n\nI thought that this was similar with the super(testcase.TestCase).",
      "parentUuid": "da5c1566_8d7c9174",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 32
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_cd95e989",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 6745
      },
      "writtenOn": "2018-06-06T13:40:56Z",
      "side": 1,
      "message": "Keep this outside of __init__",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_4d2b99eb",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 7167
      },
      "writtenOn": "2018-06-06T15:25:38Z",
      "side": 1,
      "message": "Since the cleanup_flag has True as default value, I have to initialize it before checking of \u0027--nocleanup\u0027. right?",
      "parentUuid": "da5c1566_cd95e989",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_42b6c8dd",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 2091
      },
      "writtenOn": "2018-06-06T06:56:53Z",
      "side": 1,
      "message": "So if we don\u0027t want to clean up, we need to execute the tests as:\n\npython run_sfc_tests.py --nocleanup?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_2d30e555",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 7167
      },
      "writtenOn": "2018-06-06T15:25:38Z",
      "side": 1,
      "message": "Exactly! :)",
      "parentUuid": "da5c1566_42b6c8dd",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_6df81de6",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 6745
      },
      "writtenOn": "2018-06-06T13:40:56Z",
      "side": 1,
      "message": "Why do you need this ?",
      "range": {
        "startLine": 168,
        "startChar": 16,
        "endLine": 168,
        "endChar": 40
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5c1566_8d35b148",
        "filename": "sfc/tests/functest/run_sfc_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 7167
      },
      "writtenOn": "2018-06-06T15:25:38Z",
      "side": 1,
      "message": "We want to avoid to run the cleanup method twice.\nThis will happen if we have exception and the code reach the point that the same method is called for the succeed case.",
      "parentUuid": "da5c1566_6df81de6",
      "range": {
        "startLine": 168,
        "startChar": 16,
        "endLine": 168,
        "endChar": 40
      },
      "revId": "a1d91a1f95819da4065f130bbb18e815a6bf3c00",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}